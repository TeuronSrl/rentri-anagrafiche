# coding: utf-8

"""
    anagrafiche

    Servizio Anagrafica RENTRI

    The version of the OpenAPI document: 1.0.20250114-603
    Contact: techref@rentri.it
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rentri_anagrafiche.models.registro_model import RegistroModel  # noqa: E501

class TestRegistroModel(unittest.TestCase):
    """RegistroModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegistroModel:
        """Test RegistroModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegistroModel`
        """
        model = RegistroModel()  # noqa: E501
        if include_optional:
            return RegistroModel(
                identificativo = '',
                descrizione = '',
                data_creazione = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data_chiusura = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data_modifica = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                num_iscr_associazione = '',
                identificativo_associazione = '',
                num_iscr_sito = '',
                identificativo_operatore_sito = '',
                operatore_sito = '',
                ipa_operatore_sito = '',
                cu_aoo_sito = '',
                cuu_sito = '',
                attivita = [
                    'CentroRaccolta'
                    ],
                attivita_rec_smalt = [
                    'R1'
                    ],
                stato = 'Attivo',
                uso_locale = True,
                progressivo_inziale_locale = 56
            )
        else:
            return RegistroModel(
        )
        """

    def testRegistroModel(self):
        """Test RegistroModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
